{
  "quiz": {
    "id": 44393,
    "title": "String Quiz",
    "html_url": "https://learning.flatironschool.com/courses/6676/quizzes/44393",
    "mobile_url": "https://learning.flatironschool.com/courses/6676/quizzes/44393?force_user=1&persist_headless=1",
    "description": "<div id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"java-string-quiz\"></div>\n<header class=\"fis-header\">\n  <a class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/java-string-quiz/issues/new\" target=\"_blank\"><img id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"></a>\n</header>\n\n<p>It's time to check your knowledge! Use this quiz to create a custom study guide.\nNote any answers that were marked incorrect, so you can study the relevant\nmaterial and try this quiz again.</p>",
    "quiz_type": "assignment",
    "time_limit": null,
    "timer_autosubmit_disabled": false,
    "shuffle_answers": true,
    "show_correct_answers": true,
    "scoring_policy": "keep_highest",
    "allowed_attempts": 3,
    "one_question_at_a_time": true,
    "question_count": 7,
    "points_possible": 7.0,
    "cant_go_back": false,
    "access_code": null,
    "ip_filter": null,
    "due_at": null,
    "lock_at": null,
    "unlock_at": null,
    "published": false,
    "unpublishable": true,
    "locked_for_user": true,
    "lock_info": {
      "missing_permission": "participate_as_student",
      "asset_string": "quizzes:quiz_44393"
    },
    "lock_explanation": "This quiz is currently locked.",
    "hide_results": null,
    "show_correct_answers_at": null,
    "hide_correct_answers_at": null,
    "all_dates": [
      {
        "due_at": null,
        "unlock_at": null,
        "lock_at": null,
        "base": true
      }
    ],
    "can_unpublish": true,
    "can_update": true,
    "require_lockdown_browser": false,
    "require_lockdown_browser_for_results": false,
    "require_lockdown_browser_monitor": false,
    "lockdown_browser_monitor_data": null,
    "speed_grader_url": null,
    "permissions": {
      "manage": true,
      "read": true,
      "create": true,
      "update": true,
      "submit": true,
      "preview": true,
      "delete": true,
      "read_statistics": true,
      "grade": true,
      "review_grades": true,
      "view_answer_audits": true
    },
    "quiz_reports_url": "https://learning.flatironschool.com/api/v1/courses/6676/quizzes/44393/reports",
    "quiz_statistics_url": "https://learning.flatironschool.com/api/v1/courses/6676/quizzes/44393/statistics",
    "message_students_url": "https://learning.flatironschool.com/api/v1/courses/6676/quizzes/44393/submission_users/message",
    "section_count": 1,
    "important_dates": false,
    "quiz_submission_versions_html_url": "https://learning.flatironschool.com/courses/6676/quizzes/44393/submission_versions",
    "assignment_id": 230345,
    "one_time_results": false,
    "only_visible_to_overrides": false,
    "assignment_group_id": 20001,
    "show_correct_answers_last_attempt": true,
    "version_number": 4,
    "has_access_code": false,
    "post_to_sis": false,
    "migration_id": null,
    "in_paced_course": false,
    "question_types": [

    ]
  },
  "questions": [
    {
      "id": 301054,
      "quiz_id": 44393,
      "quiz_group_id": null,
      "assessment_question_id": 521344,
      "position": null,
      "question_name": "String Constructors",
      "question_type": "multiple_choice_question",
      "question_text": "<div class=\"highlight\"><pre class=\"highlight java\"><code><span class=\"nc\">String</span> <span class=\"n\">color1</span> <span class=\"o\">=</span> <span class=\"s\">\"red\"</span><span class=\"o\">;</span>\n<span class=\"nc\">String</span> <span class=\"n\">color2</span> <span class=\"o\">=</span> <span class=\"k\">new</span> <span class=\"nc\">String</span><span class=\"o\">(</span><span class=\"s\">\"red\"</span><span class=\"o\">);</span>\n<span class=\"nc\">String</span> <span class=\"n\">color3</span> <span class=\"o\">=</span> <span class=\"s\">\"red\"</span><span class=\"o\">;</span>\n</code></pre></div>\n<p>How many <code>String</code> objects are created?</p>",
      "points_possible": 1.0,
      "correct_comments": "",
      "incorrect_comments": "",
      "neutral_comments": "",
      "correct_comments_html": "",
      "incorrect_comments_html": "",
      "neutral_comments_html": "<p><strong>Source/s:</strong></p><ul><li><a href=\"https://learning.flatironschool.com/courses/6676/pages/string-constructors\">String Constructors</a></li></ul><p></p>",
      "answers": [
        {
          "id": 4811,
          "text": "",
          "html": "<p>1</p>",
          "comments": "",
          "comments_html": "<p>Incorrect. Since <code>color1</code> and <code>color2</code> are assigned the same string literal \"red\",\nJava will create and reuse one <code>String</code> object in the string pool. However, <code>color2</code>\nwill reference a new object due to the <code>String</code> constructor call.<br>\n<img src=\"https://curriculum-content.s3.amazonaws.com/6676/java-string/q1.png\" alt=\"q1 objects\"></p>",
          "weight": 0.0
        },
        {
          "id": 1471,
          "text": "",
          "html": "<p>2</p>",
          "comments": "",
          "comments_html": "<p>Correct! Since <code>color1</code> and <code>color2</code> are assigned the same string literal \"red\",\nJava will create and reuse one <code>String</code> object in the string pool. However, <code>color2</code>\nwill reference a new object due to the <code>String</code> constructor call.<br>\n<img src=\"https://curriculum-content.s3.amazonaws.com/6676/java-string/q1.png\" alt=\"q1 objects\"></p>",
          "weight": 100.0
        },
        {
          "id": 788,
          "text": "",
          "html": "<p>3</p>",
          "comments": "",
          "comments_html": "<p>Incorrect. Since <code>color1</code> and <code>color2</code> are assigned the same string literal \"red\",\nJava will create and reuse one <code>String</code> object in the string pool. However, <code>color2</code>\nwill reference a new object due to the <code>String</code> constructor call.<br>\n<img src=\"https://curriculum-content.s3.amazonaws.com/6676/java-string/q1.png\" alt=\"q1 objects\"></p>",
          "weight": 0.0
        }
      ],
      "variables": null,
      "formulas": null,
      "answer_tolerance": null,
      "formula_decimal_places": null,
      "matches": null,
      "matching_answer_incorrect_matches": null
    },
    {
      "id": 301055,
      "quiz_id": 44393,
      "quiz_group_id": null,
      "assessment_question_id": 521345,
      "position": null,
      "question_name": "String Equality",
      "question_type": "multiple_dropdowns_question",
      "question_text": "<div class=\"highlight\"><pre class=\"highlight java\"><code><span class=\"nc\">String</span> <span class=\"n\">color1</span> <span class=\"o\">=</span> <span class=\"s\">\"red\"</span><span class=\"o\">;</span>\n<span class=\"nc\">String</span> <span class=\"n\">color2</span> <span class=\"o\">=</span> <span class=\"k\">new</span> <span class=\"nc\">String</span><span class=\"o\">(</span><span class=\"s\">\"red\"</span><span class=\"o\">);</span>\n<span class=\"nc\">String</span> <span class=\"n\">color3</span> <span class=\"o\">=</span> <span class=\"s\">\"red\"</span><span class=\"o\">;</span>\n</code></pre></div>\n<p>What is printed?</p>\n\n<p>System.out.println(color1 == color2); [answer1]</p>\n\n<p>System.out.println(color1 == color3); [answer2]</p>",
      "points_possible": 1.0,
      "correct_comments": "",
      "incorrect_comments": "",
      "neutral_comments": "",
      "correct_comments_html": "",
      "incorrect_comments_html": "",
      "neutral_comments_html": "<p><strong>Source/s:</strong></p><ul><li><a href=\"https://learning.flatironschool.com/courses/6676/pages/string-constructors\">String Constructors</a></li></ul><p></p>",
      "answers": [
        {
          "id": 9663,
          "text": "false",
          "comments": "",
          "comments_html": "<p>You are correct! The <code>==</code> operator tests if the variables reference the same object in memory.\nVariable <code>color2</code> will reference a new object due to the <code>String</code> constructor call.<br>\n<img src=\"https://curriculum-content.s3.amazonaws.com/6676/java-string/q1.png\" alt=\"q1 objects\"></p>",
          "weight": 100.0,
          "blank_id": "answer1"
        },
        {
          "id": 6295,
          "text": "true",
          "comments": "",
          "comments_html": "<p>Sorry, that is incorrect. The <code>==</code> operator tests if the variables reference the same object in memory.\nHowever, <code>color2</code> will reference a new object due to the <code>String</code> constructor call.<br>\n<img src=\"https://curriculum-content.s3.amazonaws.com/6676/java-string/q1.png\" alt=\"q1 objects\"></p>",
          "weight": 0.0,
          "blank_id": "answer1"
        },
        {
          "id": 3486,
          "text": "true",
          "comments": "",
          "comments_html": "<p>You are correct! Since the variables are assigned to the same string literal, Java assigns both to the same object in the string pool.<br>\n<img src=\"https://curriculum-content.s3.amazonaws.com/6676/java-string/q1.png\" alt=\"q1 objects\"></p>",
          "weight": 100.0,
          "blank_id": "answer2"
        },
        {
          "id": 6137,
          "text": "false",
          "comments": "",
          "comments_html": "<p>Sorry, that is incorrect. Since the variables are assigned to the same string literal, Java assigns both to the same object in the string pool.\n<img src=\"https://curriculum-content.s3.amazonaws.com/6676/java-string/q1.png\" alt=\"q1 objects\"></p>",
          "weight": 0.0,
          "blank_id": "answer2"
        }
      ],
      "variables": null,
      "formulas": null,
      "answer_tolerance": null,
      "formula_decimal_places": null,
      "matches": null,
      "matching_answer_incorrect_matches": null
    },
    {
      "id": 301056,
      "quiz_id": 44393,
      "quiz_group_id": null,
      "assessment_question_id": 521346,
      "position": null,
      "question_name": "Multiple Answers Question",
      "question_type": "multiple_answers_question",
      "question_text": "<p>We have a variable <code>lunch_menu</code>, set equal to an array of lunch menu items:</p>\n<div class=\"highlight\"><pre class=\"highlight ruby\"><code><span class=\"n\">lunch_menu</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s2\">\"pizza\"</span><span class=\"p\">,</span> <span class=\"s2\">\"sandwich\"</span><span class=\"p\">,</span> <span class=\"s2\">\"sushi\"</span><span class=\"p\">,</span> <span class=\"s2\">\"soup\"</span><span class=\"p\">,</span> <span class=\"s2\">\"salad\"</span><span class=\"p\">]</span>\n</code></pre></div>\n<p>Since you're super hungry and super excited about lunch, use the <code>.each</code> method\nto enumerate over the array and output a string to the terminal with each lunch\nmenu item with an <code>\"!\"</code> at the end.</p>\n\n<p>Which piece of code will achieve the desired result? Select all that apply:</p>",
      "points_possible": 1.0,
      "correct_comments": "",
      "incorrect_comments": "",
      "neutral_comments": "",
      "correct_comments_html": "",
      "incorrect_comments_html": "",
      "neutral_comments_html": "",
      "answers": [
        {
          "id": 236,
          "text": "",
          "comments": "",
          "comments_html": "<p>Correct! Using <code>each</code> lets us access each element of the array in the block,\nand we can output a string by using <code>puts</code>.</p>",
          "weight": 100.0,
          "html": "<div class=\"highlight\"><pre class=\"highlight ruby\"><code><span class=\"n\">lunch_menu</span><span class=\"p\">.</span><span class=\"nf\">each</span> <span class=\"k\">do</span> <span class=\"o\">|</span><span class=\"n\">lunch_item</span><span class=\"o\">|</span>\n  <span class=\"nb\">puts</span> <span class=\"n\">lunch_item</span> <span class=\"o\">+</span> <span class=\"s2\">\"!\"</span>\n<span class=\"k\">end</span>\n</code></pre></div>"
        },
        {
          "id": 9456,
          "text": "",
          "comments": "",
          "comments_html": "<p>This code would result in an error, since <code>lunch_menu</code> is an array, and we\ncan't us the <code>+</code> method to add a string to the array. How can we iterate over\neach element?</p>",
          "weight": 0.0,
          "html": "<div class=\"highlight\"><pre class=\"highlight ruby\"><code><span class=\"nb\">puts</span> <span class=\"n\">lunch_menu</span> <span class=\"o\">+</span> <span class=\"s2\">\"!\"</span>\n</code></pre></div>"
        },
        {
          "id": 2414,
          "text": "",
          "comments": "",
          "comments_html": "<p>Correct! Using <code>each</code> lets us access each element of the array in the block,\nand we can output a string by using <code>puts</code>.</p>",
          "weight": 100.0,
          "html": "<div class=\"highlight\"><pre class=\"highlight ruby\"><code><span class=\"n\">lunch_menu</span><span class=\"p\">.</span><span class=\"nf\">each</span> <span class=\"k\">do</span> <span class=\"o\">|</span><span class=\"n\">lunch_item</span><span class=\"o\">|</span>\n  <span class=\"nb\">puts</span> <span class=\"s2\">\"</span><span class=\"si\">#{</span><span class=\"n\">lunch_item</span><span class=\"si\">}</span><span class=\"s2\">!\"</span>\n<span class=\"k\">end</span>\n</code></pre></div>"
        },
        {
          "id": 2003,
          "text": "",
          "comments": "",
          "comments_html": "<p>Using <code>each</code> lets us access each element of the array in the block, but this\nmethod doesn't output anything to the terminal since we aren't using <code>puts</code>.</p>",
          "weight": 0.0,
          "html": "<div class=\"highlight\"><pre class=\"highlight ruby\"><code><span class=\"n\">lunch_menu</span><span class=\"p\">.</span><span class=\"nf\">each</span> <span class=\"k\">do</span> <span class=\"o\">|</span><span class=\"n\">lunch_item</span><span class=\"o\">|</span>\n  <span class=\"s2\">\"</span><span class=\"si\">#{</span><span class=\"n\">lunch_item</span><span class=\"si\">}</span><span class=\"s2\">!\"</span>\n<span class=\"k\">end</span>\n</code></pre></div>"
        },
        {
          "id": 1513,
          "text": "",
          "comments": "",
          "comments_html": "<p>Be sure to study the source/s for this question. You'll get it next time.</p>",
          "weight": 0.0,
          "html": "<p>I don't know.</p>"
        }
      ],
      "variables": null,
      "formulas": null,
      "answer_tolerance": null,
      "formula_decimal_places": null,
      "matches": null,
      "matching_answer_incorrect_matches": null
    },
    {
      "id": 301057,
      "quiz_id": 44393,
      "quiz_group_id": null,
      "assessment_question_id": 521347,
      "position": null,
      "question_name": "True/False Question",
      "question_type": "true_false_question",
      "question_text": "<p>When we run <code>git add .</code>, <strong>all</strong> files that have been created or modified since\nthe last commit are staged and will be included in the next commit.&nbsp;</p>",
      "points_possible": 1.0,
      "correct_comments": "",
      "incorrect_comments": "",
      "neutral_comments": "",
      "correct_comments_html": "",
      "incorrect_comments_html": "",
      "neutral_comments_html": "",
      "answers": [
        {
          "comments": "",
          "comments_html": "<p>Not quite. Be sure to review the <code>.gitignore</code> source for this question. You'll\nget it next time!</p>",
          "text": "True",
          "weight": 0,
          "id": 1016
        },
        {
          "comments": "",
          "comments_html": "",
          "text": "False",
          "weight": 100,
          "id": 3134
        }
      ],
      "variables": null,
      "formulas": null,
      "answer_tolerance": null,
      "formula_decimal_places": null,
      "matches": null,
      "matching_answer_incorrect_matches": null
    },
    {
      "id": 301058,
      "quiz_id": 44393,
      "quiz_group_id": null,
      "assessment_question_id": 521348,
      "position": null,
      "question_name": "Matching Question",
      "question_type": "matching_question",
      "question_text": "<p>Match the term with the correct description.</p>",
      "points_possible": 1.0,
      "correct_comments": "",
      "incorrect_comments": "",
      "neutral_comments": "",
      "correct_comments_html": "",
      "incorrect_comments_html": "",
      "neutral_comments_html": "",
      "answers": [
        {
          "id": "7483",
          "text": "Declarative Programming",
          "left": "Declarative Programming",
          "right": "Describes what the end result should be, not the specific actions or steps to\nget to that result.",
          "comments": "",
          "comments_html": "",
          "match_id": 2265
        },
        {
          "id": "8645",
          "text": "Imperative Programming",
          "left": "Imperative Programming",
          "right": "Explicitly describes the specific actions or steps for getting to the end\nresult.",
          "comments": "",
          "comments_html": "",
          "match_id": 8726
        }
      ],
      "variables": null,
      "formulas": null,
      "answer_tolerance": null,
      "formula_decimal_places": null,
      "matches": [
        {
          "text": "Describes what the end result should be, not the specific actions or steps to\nget to that result.",
          "match_id": 2265
        },
        {
          "text": "Explicitly describes the specific actions or steps for getting to the end\nresult.",
          "match_id": 8726
        },
        {
          "text": "I don't know.",
          "match_id": 5877
        }
      ],
      "matching_answer_incorrect_matches": "I don't know."
    },
    {
      "id": 301059,
      "quiz_id": 44393,
      "quiz_group_id": null,
      "assessment_question_id": 521349,
      "position": null,
      "question_name": "Multiple Dropdowns Question",
      "question_type": "multiple_dropdowns_question",
      "question_text": "<div class=\"highlight\"><pre class=\"highlight ruby\"><code><span class=\"k\">module</span> <span class=\"nn\">Talk</span>\n  <span class=\"k\">module</span> <span class=\"nn\">Phrases</span>\n    <span class=\"k\">def</span> <span class=\"nf\">hello</span>\n      <span class=\"s2\">\"Hello!\"</span>\n    <span class=\"k\">end</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">goodbye</span>\n      <span class=\"s2\">\"Good bye!\"</span>\n    <span class=\"k\">end</span>\n  <span class=\"k\">end</span>\n\n  <span class=\"k\">module</span> <span class=\"nn\">Teachers</span>\n    <span class=\"k\">def</span> <span class=\"nf\">teach</span>\n      <span class=\"s2\">\"Repeat after me.\"</span>\n    <span class=\"k\">end</span>\n  <span class=\"k\">end</span>\n<span class=\"k\">end</span>\n</code></pre></div>\n<p>The code sample above is an example of [a1] modules. To access the <code>Teachers</code>\nmodule to include it in a class, we would type include [a2].</p>",
      "points_possible": 1.0,
      "correct_comments": "",
      "incorrect_comments": "",
      "neutral_comments": "",
      "correct_comments_html": "",
      "incorrect_comments_html": "",
      "neutral_comments_html": "",
      "answers": [
        {
          "id": 5546,
          "text": "namespaced",
          "comments": "",
          "comments_html": "<p>Correct! Both <code>Teachers</code> and <code>Phrases</code> are namespaced inside of <code>Talk</code>. They\ncan be accessed using <code>::</code>.</p>",
          "weight": 100.0,
          "blank_id": "a1"
        },
        {
          "id": 1884,
          "text": "subclass inherited",
          "comments": "",
          "comments_html": "<p>There aren't any classes, nor any subclass inheritance, in the syntax above.\nYou might want to review the resource/s for this question.</p>",
          "weight": 0.0,
          "blank_id": "a1"
        },
        {
          "id": 1234,
          "text": "I don't know",
          "comments": "",
          "comments_html": "<p>Be sure to study the source/s for this question. You'll get it next time.</p>",
          "weight": 0.0,
          "blank_id": "a1"
        },
        {
          "id": 5119,
          "text": "Talk::Teachers",
          "comments": "",
          "comments_html": "<p>Correct! To <code>include</code> the <code>Teachers</code> module, we need to access it using <code>::</code>\non the module that contains it.</p>",
          "weight": 100.0,
          "blank_id": "a2"
        },
        {
          "id": 7053,
          "text": "Teachers::Talk",
          "comments": "",
          "comments_html": "<p>When using <code>::</code> to access a nested module, we put the module that contains the\nother module on the left side of the double colon.</p>",
          "weight": 0.0,
          "blank_id": "a2"
        },
        {
          "id": 9879,
          "text": "Talk.Teachers",
          "comments": "",
          "comments_html": "<p>Not quite. This looks more like we're trying to call a method on <code>Talk</code>.</p>",
          "weight": 0.0,
          "blank_id": "a2"
        }
      ],
      "variables": null,
      "formulas": null,
      "answer_tolerance": null,
      "formula_decimal_places": null,
      "matches": null,
      "matching_answer_incorrect_matches": null
    },
    {
      "id": 301060,
      "quiz_id": 44393,
      "quiz_group_id": null,
      "assessment_question_id": 521350,
      "position": null,
      "question_name": "Fill in Multiple Blanks Question",
      "question_type": "fill_in_multiple_blanks_question",
      "question_text": "<p>In order for Active Record to work, it is necessary to follow the naming\nconventions it is expecting. Specifically, the name of the class must be\n[answer1] and the name of the table must be [answer2].</p>",
      "points_possible": 1.0,
      "correct_comments": "",
      "incorrect_comments": "",
      "neutral_comments": "",
      "correct_comments_html": "",
      "incorrect_comments_html": "",
      "neutral_comments_html": "",
      "answers": [
        {
          "id": 6782,
          "text": "singular",
          "comments": "",
          "comments_html": "",
          "weight": 100.0,
          "blank_id": "answer1"
        },
        {
          "id": 142,
          "text": "plural",
          "comments": "",
          "comments_html": "",
          "weight": 100.0,
          "blank_id": "answer2"
        }
      ],
      "variables": null,
      "formulas": null,
      "answer_tolerance": null,
      "formula_decimal_places": null,
      "matches": null,
      "matching_answer_incorrect_matches": null
    }
  ]
}